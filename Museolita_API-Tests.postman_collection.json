{
	"info": {
		"_postman_id": "a81b8ab3-0655-475f-8659-0111d5d6eed4",
		"name": "Museolita_API-Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20308430"
	},
	"item": [
		{
			"name": "Artist-Tests",
			"item": [
				{
					"name": "Create a new artist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"artist_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Pablo Picasso\",\r\n    \"birthplace\": \"Madrid, Spain\",\r\n    \"birthdate\": \"1881-10-25\",\r\n    \"image\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/Pablo_picasso_1.jpg/200px-Pablo_picasso_1.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artists",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artists"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all artists",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of artists > ' + 0, function () {\r",
									"   var data = pm.response.json()\r",
									"   pm.expect(data.length).to.greaterThan(0)\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artists",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artists"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get one artist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artists/{{artist_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artists",
								"{{artist_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a non-existent artist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The artist with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artists/00000000-0000-0000-0000-000000000000",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artists",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update an artist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Pablo Picasso\",\r\n    \"birthplace\": \"Málaga, Spain\",\r\n    \"birthdate\": \"1881-10-25\",\r\n    \"image\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/Pablo_picasso_1.jpg/200px-Pablo_picasso_1.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artists/{{artist_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artists",
								"{{artist_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a non-existent artist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The artist with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Pablo Picasso\",\r\n    \"birthplace\": \"Málaga, Spain\",\r\n    \"birthdate\": \"1881-10-25\",\r\n    \"image\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/Pablo_picasso_1.jpg/200px-Pablo_picasso_1.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artists/00000000-0000-0000-0000-000000000000",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artists",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an artist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artists/{{artist_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artists",
								"{{artist_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a non-existent artist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The artist with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artists/00000000-0000-0000-0000-000000000000",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artists",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Artist-Artwork-Tests",
			"item": [
				{
					"name": "Create a new artist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"artist_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Pablo Picasso\",\r\n    \"birthplace\": \"Madrid, Spain\",\r\n    \"birthdate\": \"1881-10-25\",\r\n    \"image\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/Pablo_picasso_1.jpg/200px-Pablo_picasso_1.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artists",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artists"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new artwork 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"artwork1_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"La Femme qui pleure\",\r\n    \"description\": \"The Weeping Woman, I is an elaboration of one of the central figures in Picasso’s famous mural-size painting Guernica, executed some months earlier.\",\r\n    \"year\": 1838,\r\n    \"type\": \"Painting\",\r\n    \"mainImage\": \"https://resize.marianne.net/r/1540,924/img/var/ceA5RblOiz/asSMcDI0Qj6wQb2OC/asSMcDI0Qj6wQb2OC.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artists/{{artist_id}}/artworks",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artists",
								"{{artist_id}}",
								"artworks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new artwork 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"artwork2_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Child with dove\",\r\n    \"description\": \"It is an oil on canvas painting by the Spanish artist Pablo Picasso, which he created in 1901 at the start of his Blue Period\",\r\n    \"year\": 1903,\r\n    \"type\": \"Painting\",\r\n    \"mainImage\": \"main-image.url\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artists/{{artist_id}}/artworks",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artists",
								"{{artist_id}}",
								"artworks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an artist's artwork",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artists/{{artist_id}}/artworks/{{artwork1_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artists",
								"{{artist_id}}",
								"artworks",
								"{{artwork1_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an artist's artwork",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artists/{{artist_id}}/artworks/{{artwork1_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artists",
								"{{artist_id}}",
								"artworks",
								"{{artwork1_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add artwork to artist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artists/{{artist_id}}/artworks/{{artwork1_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artists",
								"{{artist_id}}",
								"artworks",
								"{{artwork1_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an artist's artwork 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artists/{{artist_id}}/artworks/{{artwork2_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artists",
								"{{artist_id}}",
								"artworks",
								"{{artwork2_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Associate artworks to artist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"id\": \"{{artwork1_id}}\",\r\n        \"name\": \"La Femme qui pleure\",\r\n        \"description\": \"The Weeping Woman, I is an elaboration of one of the central figures in Picasso’s famous mural-size painting Guernica, executed some months earlier.\",\r\n        \"year\": 1838,\r\n        \"type\": \"Painting\",\r\n        \"mainImage\": \"https://resize.marianne.net/r/1540,924/img/var/ceA5RblOiz/asSMcDI0Qj6wQb2OC/asSMcDI0Qj6wQb2OC.jpg\"\r\n    },\r\n    {\r\n        \"id\": \"{{artwork2_id}}\",\r\n        \"name\": \"Child with dove\",\r\n        \"description\": \"It is an oil on canvas painting by the Spanish artist Pablo Picasso, which he created in 1901 at the start of his Blue Period\",\r\n        \"year\": 1903,\r\n        \"type\": \"Painting\",\r\n        \"mainImage\": \"main-image.url\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artists/{{artist_id}}/artworks",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artists",
								"{{artist_id}}",
								"artworks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all artwork's images Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artists/{{artist_id}}/artworks",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artists",
								"{{artist_id}}",
								"artworks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an artwork 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artworks/{{artwork1_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artworks",
								"{{artwork1_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an artwork 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artworks/{{artwork2_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artworks",
								"{{artwork2_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an artist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artists/{{artist_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artists",
								"{{artist_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Artwork-Tests",
			"item": [
				{
					"name": "Create a new artist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"artist_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Pablo Picasso\",\r\n    \"birthplace\": \"Madrid, Spain\",\r\n    \"birthdate\": \"1881-10-25\",\r\n    \"image\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/Pablo_picasso_1.jpg/200px-Pablo_picasso_1.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artists",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artists"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new artwork",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"artwork_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"La Femme qui pleure\",\r\n    \"description\": \"The Weeping Woman, I is an elaboration of one of the central figures in Picasso’s famous mural-size painting Guernica, executed some months earlier.\",\r\n    \"year\": 1838,\r\n    \"type\": \"Painting\",\r\n    \"mainImage\": \"https://resize.marianne.net/r/1540,924/img/var/ceA5RblOiz/asSMcDI0Qj6wQb2OC/asSMcDI0Qj6wQb2OC.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artists/{{artist_id}}/artworks",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artists",
								"{{artist_id}}",
								"artworks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all artworks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of artworks > ' + 0, function () {\r",
									"   var data = pm.response.json()\r",
									"   pm.expect(data.length).to.greaterThan(0)\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artworks",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artworks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get one artwork",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artworks/{{artwork_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artworks",
								"{{artwork_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a non-existent artwork",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The artwork with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artworks/00000000-0000-0000-0000-000000000000",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artworks",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update an artwork",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"La Femme qui pleure\",\r\n    \"description\": \"The Weeping Woman, I is an elaboration of one of the central figures in Picasso’s famous mural-size painting Guernica, executed some months earlier.\",\r\n    \"year\": 1837,\r\n    \"type\": \"Painting\",\r\n    \"mainImage\": \"https://resize.marianne.net/r/1540,924/img/var/ceA5RblOiz/asSMcDI0Qj6wQb2OC/asSMcDI0Qj6wQb2OC.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artworks/{{artwork_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artworks",
								"{{artwork_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a non-existent artwork",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The artwork with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"La Femme qui pleure\",\r\n    \"description\": \"The Weeping Woman, I is an elaboration of one of the central figures in Picasso’s famous mural-size painting Guernica, executed some months earlier.\",\r\n    \"year\": 1837,\r\n    \"type\": \"Painting\",\r\n    \"mainImage\": \"https://resize.marianne.net/r/1540,924/img/var/ceA5RblOiz/asSMcDI0Qj6wQb2OC/asSMcDI0Qj6wQb2OC.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artworks/00000000-0000-0000-0000-000000000000",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artworks",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an artwork",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artworks/{{artwork_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artworks",
								"{{artwork_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a non-existent artwork",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The artwork with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artworks/00000000-0000-0000-0000-000000000000",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artworks",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Artwork-Image-Tests",
			"item": [
				{
					"name": "Create a new artist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"artist_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Pablo Picasso\",\r\n    \"birthplace\": \"Madrid, Spain\",\r\n    \"birthdate\": \"1881-10-25\",\r\n    \"image\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/Pablo_picasso_1.jpg/200px-Pablo_picasso_1.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artists",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artists"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new artwork",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"artwork_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"La Femme qui pleure\",\r\n    \"description\": \"The Weeping Woman, I is an elaboration of one of the central figures in Picasso’s famous mural-size painting Guernica, executed some months earlier.\",\r\n    \"year\": 1838,\r\n    \"type\": \"Painting\",\r\n    \"mainImage\": \"https://resize.marianne.net/r/1540,924/img/var/ceA5RblOiz/asSMcDI0Qj6wQb2OC/asSMcDI0Qj6wQb2OC.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artists/{{artist_id}}/artworks",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artists",
								"{{artist_id}}",
								"artworks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new image 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"image1_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"source\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/Pablo_picasso_1.jpg/200px-Pablo_picasso_1.jpg\",\r\n    \"altText\": \"Pablo-Picassoo.jpg\",\r\n    \"height\": 300,\r\n    \"width\": 300\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artworks/{{artwork_id}}/images",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artworks",
								"{{artwork_id}}",
								"images"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new image 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"image2_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"source\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/Pablo_picasso_1.jpg/200px-Pablo_picasso_1.jpg\",\r\n    \"altText\": \"Pablo-Picassoo.jpg\",\r\n    \"height\": 300,\r\n    \"width\": 300\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artworks/{{artwork_id}}/images",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artworks",
								"{{artwork_id}}",
								"images"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an artwork's image",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artworks/{{artwork_id}}/images/{{image1_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artworks",
								"{{artwork_id}}",
								"images",
								"{{image1_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an artwork image",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artworks/{{artwork_id}}/images/{{image1_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artworks",
								"{{artwork_id}}",
								"images",
								"{{image1_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add image to artwork",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artworks/{{artwork_id}}/images/{{image1_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artworks",
								"{{artwork_id}}",
								"images",
								"{{image1_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an artwork's image",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artworks/{{artwork_id}}/images/{{image2_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artworks",
								"{{artwork_id}}",
								"images",
								"{{image2_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Associate images to artwork",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"id\": \"{{image1_id}}\",\r\n        \"source\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/Pablo_picasso_1.jpg/200px-Pablo_picasso_1.jpg\",\r\n        \"altText\": \"Pablo-Picassoo.jpg\",\r\n        \"height\": 300,\r\n        \"width\": 300\r\n    },\r\n    {\r\n        \"id\": \"{{image2_id}}\",\r\n        \"source\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/Pablo_picasso_1.jpg/200px-Pablo_picasso_1.jpg\",\r\n        \"altText\": \"Pablo-Picassoo.jpg\",\r\n        \"height\": 300,\r\n        \"width\": 300\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artworks/{{artwork_id}}/images",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artworks",
								"{{artwork_id}}",
								"images"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all artwork's images",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artworks/{{artwork_id}}/images",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artworks",
								"{{artwork_id}}",
								"images"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an image 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/images/{{image1_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"images",
								"{{image1_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an image 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/images/{{image2_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"images",
								"{{image2_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an artwork",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artworks/{{artwork_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artworks",
								"{{artwork_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an artist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artists/{{artist_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artists",
								"{{artist_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Exhibition-Tests",
			"item": [
				{
					"name": "Create a new museum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"museum_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"The National Gallery\",\r\n    \"description\": \"Founded in 1824, it houses a collection of over 2,300 paintings dating from the mid-13th century to 1900\",\r\n    \"address\": \"Trafalgar Square, London WC2N 5DN\",\r\n    \"city\": \"London\",\r\n    \"image\": \"https://cdn.archpaper.com/wp-content/uploads/2021/05/p-101-Sainsbury-Wing-of-The-National-Gallery-London-1280x1015.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/museums",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"museums"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new exhibition",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"exhibition_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Raphael\",\r\n    \"description\": \"One of the first-ever exhibitions to explore Raphael's complete career\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/museums/{{museum_id}}/exhibitions",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"museums",
								"{{museum_id}}",
								"exhibitions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get one exhibition",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/exhibitions/{{exhibition_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"exhibitions",
								"{{exhibition_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a non-existent exhibition",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The exhibition with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/exhibitions/00000000-0000-0000-0000-000000000000",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"exhibitions",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all exhibitions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of exhibitions > ' + 0, function () {\r",
									"   var data = pm.response.json()\r",
									"   pm.expect(data.length).to.greaterThan(0)\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/exhibitions",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"exhibitions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update an exhibition",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Raphael\",\r\n    \"description\": \"One of the first-ever exhibitions to explore Raphael's complete career. Visit us now.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/exhibitions/{{exhibition_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"exhibitions",
								"{{exhibition_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a non-existent exhibition",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The exhibition with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Raphael\",\r\n    \"description\": \"One of the first-ever exhibitions to explore Raphael's complete career\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/exhibitions/00000000-0000-0000-0000-000000000000",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"exhibitions",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an exhibition",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/exhibitions/{{exhibition_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"exhibitions",
								"{{exhibition_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a non-existing exhibition",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The exhibition with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/exhibitions/00000000-0000-0000-0000-000000000000",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"exhibitions",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a museum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/museums/{{museum_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"museums",
								"{{museum_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Image-Tests",
			"item": [
				{
					"name": "Create a new artist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"artist_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Pablo Picasso\",\r\n    \"birthplace\": \"Madrid, Spain\",\r\n    \"birthdate\": \"1881-10-25\",\r\n    \"image\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/Pablo_picasso_1.jpg/200px-Pablo_picasso_1.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artists",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artists"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new artwork",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"artwork_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"La Femme qui pleure\",\r\n    \"description\": \"The Weeping Woman, I is an elaboration of one of the central figures in Picasso’s famous mural-size painting Guernica, executed some months earlier.\",\r\n    \"year\": 1838,\r\n    \"type\": \"Painting\",\r\n    \"mainImage\": \"https://resize.marianne.net/r/1540,924/img/var/ceA5RblOiz/asSMcDI0Qj6wQb2OC/asSMcDI0Qj6wQb2OC.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artists/{{artist_id}}/artworks",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artists",
								"{{artist_id}}",
								"artworks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new image",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"image_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"source\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/Pablo_picasso_1.jpg/200px-Pablo_picasso_1.jpg\",\r\n    \"altText\": \"Pablo-Picassoo.jpg\",\r\n    \"height\": 300,\r\n    \"width\": 300\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artworks/{{artwork_id}}/images",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artworks",
								"{{artwork_id}}",
								"images"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get one image",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/images/{{image_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"images",
								"{{image_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a non-existent image",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The image with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/images/00000000-0000-0000-0000-000000000000",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"images",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all images",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of images > ' + 0, function () {\r",
									"   var data = pm.response.json()\r",
									"   pm.expect(data.length).to.greaterThan(0)\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/images",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"images"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update an image",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"source\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/Pablo_picasso_1.jpg/200px-Pablo_picasso_1.jpg\",\r\n    \"altText\": \"Pablo-Picasso.jpg\",\r\n    \"height\": 300,\r\n    \"width\": 300\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/images/{{image_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"images",
								"{{image_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a non-existent image",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The image with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"source\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/Pablo_picasso_1.jpg/200px-Pablo_picasso_1.jpg\",\r\n    \"altText\": \"Pablo-Picasso.jpg\",\r\n    \"height\": 300,\r\n    \"width\": 300\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/images/00000000-0000-0000-0000-000000000000",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"images",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an image",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/images/{{image_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"images",
								"{{image_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a non-existent image",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The image with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/images/00000000-0000-0000-0000-000000000000",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"images",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an artwork",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artworks/{{artwork_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artworks",
								"{{artwork_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an artist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artists/{{artist_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artists",
								"{{artist_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Museum-Tests",
			"item": [
				{
					"name": "Create a new museum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"museum_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"The National Gallery\",\r\n    \"description\": \"Founded in 1824, it houses a collection of over 2,300 paintings dating from the mid-13th century to 1900\",\r\n    \"address\": \"Trafalgar Square, London WC2N 5DN\",\r\n    \"city\": \"London\",\r\n    \"image\": \"https://cdn.archpaper.com/wp-content/uploads/2021/05/p-101-Sainsbury-Wing-of-The-National-Gallery-London-1280x1015.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/museums",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"museums"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all museums",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of museums > ' + 0, function () {\r",
									"   var data = pm.response.json()\r",
									"   pm.expect(data.length).to.greaterThan(0)\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/museums",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"museums"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get one museum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/museums/{{museum_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"museums",
								"{{museum_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a non-existent museum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The museum with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/museums/00000000-0000-0000-0000-000000000000",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"museums",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a museum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Tha National Gallery of London\",\r\n    \"description\": \"Founded in 1824, it houses a collection of over 2,300 paintings dating from the mid-13th century to 1900\",\r\n    \"address\": \"Trafalgar Square, London WC2N 5DN\",\r\n    \"city\": \"London\",\r\n    \"image\": \"https://cdn.archpaper.com/wp-content/uploads/2021/05/p-101-Sainsbury-Wing-of-The-National-Gallery-London-1280x1015.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/museums/{{museum_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"museums",
								"{{museum_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a non-existent museum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The museum with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"The National Gallery\",\r\n    \"description\": \"Founded in 1824, it houses a collection of over 2,300 paintings dating from the mid-13th century to 1900\",\r\n    \"address\": \"Trafalgar Square, London WC2N 5DN\",\r\n    \"city\": \"London\",\r\n    \"image\": \"https://cdn.archpaper.com/wp-content/uploads/2021/05/p-101-Sainsbury-Wing-of-The-National-Gallery-London-1280x1015.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/museums/00000000-0000-0000-0000-000000000000",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"museums",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a museum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/museums/{{museum_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"museums",
								"{{museum_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a non-existent museum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The museum with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/museums/00000000-0000-0000-0000-000000000000",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"museums",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Museum-Artwork-Tests",
			"item": [
				{
					"name": "Create a new museum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"museum_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"The National Gallery\",\r\n    \"description\": \"Founded in 1824, it houses a collection of over 2,300 paintings dating from the mid-13th century to 1900\",\r\n    \"address\": \"Trafalgar Square, London WC2N 5DN\",\r\n    \"city\": \"London\",\r\n    \"image\": \"https://cdn.archpaper.com/wp-content/uploads/2021/05/p-101-Sainsbury-Wing-of-The-National-Gallery-London-1280x1015.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/museums",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"museums"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new artist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"artist_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Pablo Picasso\",\r\n    \"birthplace\": \"Madrid, Spain\",\r\n    \"birthdate\": \"1881-10-25\",\r\n    \"image\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/Pablo_picasso_1.jpg/200px-Pablo_picasso_1.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artists",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artists"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new artwork",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"artwork1_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"La Femme qui pleure\",\r\n    \"description\": \"The Weeping Woman, I is an elaboration of one of the central figures in Picasso’s famous mural-size painting Guernica, executed some months earlier.\",\r\n    \"year\": 1838,\r\n    \"type\": \"Painting\",\r\n    \"mainImage\": \"https://resize.marianne.net/r/1540,924/img/var/ceA5RblOiz/asSMcDI0Qj6wQb2OC/asSMcDI0Qj6wQb2OC.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artists/{{artist_id}}/artworks",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artists",
								"{{artist_id}}",
								"artworks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new artwork 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"artwork2_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Child with dove\",\r\n    \"description\": \"It is an oil on canvas painting by the Spanish artist Pablo Picasso, which he created in 1901 at the start of his Blue Period\",\r\n    \"year\": 1903,\r\n    \"type\": \"Painting\",\r\n    \"mainImage\": \"main-image.url\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artists/{{artist_id}}/artworks",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artists",
								"{{artist_id}}",
								"artworks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add artwork to museum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/museums/{{museum_id}}/artworks/{{artwork1_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"museums",
								"{{museum_id}}",
								"artworks",
								"{{artwork1_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a museum's artwork",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/museums/{{museum_id}}/artworks/{{artwork1_id}}/",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"museums",
								"{{museum_id}}",
								"artworks",
								"{{artwork1_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Associate artworks to museum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"id\": \"{{artwork1_id}}\",\r\n        \"name\": \"La Femme qui pleure\",\r\n        \"description\": \"The Weeping Woman, I is an elaboration of one of the central figures in Picasso’s famous mural-size painting Guernica, executed some months earlier.\",\r\n        \"year\": 1838,\r\n        \"type\": \"Painting\",\r\n        \"mainImage\": \"https://resize.marianne.net/r/1540,924/img/var/ceA5RblOiz/asSMcDI0Qj6wQb2OC/asSMcDI0Qj6wQb2OC.jpg\"\r\n    },\r\n    {\r\n        \"id\": \"{{artwork2_id}}\",\r\n        \"name\": \"Child with dove\",\r\n        \"description\": \"It is an oil on canvas painting by the Spanish artist Pablo Picasso, which he created in 1901 at the start of his Blue Period\",\r\n        \"year\": 1903,\r\n        \"type\": \"Painting\",\r\n        \"mainImage\": \"main-image.url\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/museums/{{museum_id}}/artworks",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"museums",
								"{{museum_id}}",
								"artworks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all museum's artworks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/museums/{{museum_id}}/artworks",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"museums",
								"{{museum_id}}",
								"artworks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a museum's artwork",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/museums/{{museum_id}}/artworks/{{artwork1_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"museums",
								"{{museum_id}}",
								"artworks",
								"{{artwork1_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an artwork 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artworks/{{artwork1_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artworks",
								"{{artwork1_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an artwork 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artworks/{{artwork2_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artworks",
								"{{artwork2_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an artist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artists/{{artist_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artists",
								"{{artist_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a museum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/museums/{{museum_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"museums",
								"{{museum_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Museum-Exhibition-Tests",
			"item": [
				{
					"name": "Create a new museum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"museum_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"The National Gallery\",\r\n    \"description\": \"Founded in 1824, it houses a collection of over 2,300 paintings dating from the mid-13th century to 1900\",\r\n    \"address\": \"Trafalgar Square, London WC2N 5DN\",\r\n    \"city\": \"London\",\r\n    \"image\": \"https://cdn.archpaper.com/wp-content/uploads/2021/05/p-101-Sainsbury-Wing-of-The-National-Gallery-London-1280x1015.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/museums",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"museums"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new exhibition 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"exhibition1_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Raphael\",\r\n    \"description\": \"One of the first-ever exhibitions to explore Raphael's complete career\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/museums/{{museum_id}}/exhibitions",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"museums",
								"{{museum_id}}",
								"exhibitions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new exhibition 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"exhibition2_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Picasso\",\r\n    \"description\": \"One of the first-ever exhibitions to explore Picasso's complete career\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/museums/{{museum_id}}/exhibitions",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"museums",
								"{{museum_id}}",
								"exhibitions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add exhibition to museum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/museums/{{museum_id}}/exhibitions/{{exhibition2_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"museums",
								"{{museum_id}}",
								"exhibitions",
								"{{exhibition2_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a museum's exhibition",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/museums/{{museum_id}}/exhibitions/{{exhibition1_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"museums",
								"{{museum_id}}",
								"exhibitions",
								"{{exhibition1_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Associate exhibitions to museum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"id\": \"{{exhibition1_id}}\",\r\n        \"name\": \"Raphael\",\r\n        \"description\": \"One of the first-ever exhibitions to explore Raphael's complete career\"\r\n    },\r\n    {\r\n        \"id\": \"{{exhibition2_id}}\",\r\n        \"name\": \"Picasso\",\r\n        \"description\": \"One of the first-ever exhibitions to explore Picasso's complete career\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/museums/{{museum_id}}/exhibitions",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"museums",
								"{{museum_id}}",
								"exhibitions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all museum's exhibitions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/museums/{{museum_id}}/exhibitions",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"museums",
								"{{museum_id}}",
								"exhibitions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a museum's exhibition",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/museums/{{museum_id}}/exhibitions/{{exhibition2_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"museums",
								"{{museum_id}}",
								"exhibitions",
								"{{exhibition2_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an exhibition 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/exhibitions/{{exhibition1_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"exhibitions",
								"{{exhibition1_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an exhibition 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/exhibitions/{{exhibition2_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"exhibitions",
								"{{exhibition2_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a museum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/museums/{{museum_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"museums",
								"{{museum_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Sponsor-Tests",
			"item": [
				{
					"name": "Create a new sponsor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"sponsor_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Art Society\",\r\n    \"description\": \"an organization engaging in fostering impressionist modern art\",\r\n    \"website\": \"www.art-society.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/sponsors",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"sponsors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get one sponsor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/sponsors/{{sponsor_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"sponsors",
								"{{sponsor_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a non-existent sponsor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The sponsor with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/sponsors/00000000-0000-0000-0000-000000000000",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"sponsors",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all sponsors",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of sponsors > ' + 0, function () {\r",
									"   var data = pm.response.json()\r",
									"   pm.expect(data.length).to.greaterThan(0)\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/sponsors",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"sponsors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a sponsor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"id\": \"{{sponsor_id}}\",\r\n        \"name\": \"Art Society\",\r\n        \"description\": \"an organization engaging in fostering impressionist modern art\",\r\n        \"website\": \"www.new-art-society-url.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/sponsors/{{sponsor_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"sponsors",
								"{{sponsor_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a non-existent sponsor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The sponsor with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"id\": \"{{sponsor_id}}\",\r\n        \"name\": \"Art Society\",\r\n        \"description\": \"an organization engaging in fostering impressionist modern art\",\r\n        \"website\": \"www.new-art-society-url.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/sponsors/00000000-0000-0000-0000-000000000000",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"sponsors",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a sponsor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/sponsors/{{sponsor_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"sponsors",
								"{{sponsor_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a non-existent sponsor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The sponsor with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/sponsors/00000000-0000-0000-0000-000000000000",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"sponsors",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Sponsor-Exhibition-Tests",
			"item": [
				{
					"name": "Create a new museum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"museum_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"The National Gallery\",\r\n    \"description\": \"Founded in 1824, it houses a collection of over 2,300 paintings dating from the mid-13th century to 1900\",\r\n    \"address\": \"Trafalgar Square, London WC2N 5DN\",\r\n    \"city\": \"London\",\r\n    \"image\": \"https://cdn.archpaper.com/wp-content/uploads/2021/05/p-101-Sainsbury-Wing-of-The-National-Gallery-London-1280x1015.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/museums",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"museums"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new exhibition 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"exhibition1_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Raphael\",\r\n    \"description\": \"One of the first-ever exhibitions to explore Raphael's complete career\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/museums/{{museum_id}}/exhibitions",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"museums",
								"{{museum_id}}",
								"exhibitions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new exhibition 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"exhibition2_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Picasso\",\r\n    \"description\": \"One of the first-ever exhibitions to explore Picasso's complete career\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/museums/{{museum_id}}/exhibitions",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"museums",
								"{{museum_id}}",
								"exhibitions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new sponsor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"sponsor_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Art Society\",\r\n    \"description\": \"an organization engaging in fostering impressionist modern art\",\r\n    \"website\": \"www.art-society.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/sponsors",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"sponsors"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add exhibition to sponsor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/sponsors/{{sponsor_id}}/exhibitions/{{exhibition1_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"sponsors",
								"{{sponsor_id}}",
								"exhibitions",
								"{{exhibition1_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a sponsor's exhibition",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/sponsors/{{sponsor_id}}/exhibitions/{{exhibition1_id}}/",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"sponsors",
								"{{sponsor_id}}",
								"exhibitions",
								"{{exhibition1_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Associate exhibitions to sponsor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"id\": \"{{exhibition1_id}}\",\r\n        \"name\": \"Raphael\",\r\n        \"description\": \"One of the first-ever exhibitions to explore Raphael's complete career\"\r\n    },\r\n    {\r\n        \"id\": \"{{exhibition2_id}}\",\r\n        \"name\": \"Picasso\",\r\n        \"description\": \"One of the first-ever exhibitions to explore Picasso's complete career\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/sponsors/{{sponsor_id}}/exhibitions",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"sponsors",
								"{{sponsor_id}}",
								"exhibitions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all sponsor's exhibitions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/sponsors/{{sponsor_id}}/exhibitions",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"sponsors",
								"{{sponsor_id}}",
								"exhibitions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a sponsor's exhibition",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/sponsors/{{sponsor_id}}/exhibitions/{{exhibition1_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"sponsors",
								"{{sponsor_id}}",
								"exhibitions",
								"{{exhibition1_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an exhibition 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/exhibitions/{{exhibition1_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"exhibitions",
								"{{exhibition1_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an exhibition 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/exhibitions/{{exhibition2_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"exhibitions",
								"{{exhibition2_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an artist Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/sponsors/{{sponsor_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"sponsors",
								"{{sponsor_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a museum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/museums/{{museum_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"museums",
								"{{museum_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Exhibition-Artworks-Tests",
			"item": [
				{
					"name": "Create a new museum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"museum_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"The National Gallery\",\r\n    \"description\": \"Founded in 1824, it houses a collection of over 2,300 paintings dating from the mid-13th century to 1900\",\r\n    \"address\": \"Trafalgar Square, London WC2N 5DN\",\r\n    \"city\": \"London\",\r\n    \"image\": \"https://cdn.archpaper.com/wp-content/uploads/2021/05/p-101-Sainsbury-Wing-of-The-National-Gallery-London-1280x1015.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/museums",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"museums"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new exhibition",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"exhibition_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Raphael\",\r\n    \"description\": \"One of the first-ever exhibitions to explore Raphael's complete career\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/museums/{{museum_id}}/exhibitions",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"museums",
								"{{museum_id}}",
								"exhibitions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new artist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"artist_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Pablo Picasso\",\r\n    \"birthplace\": \"Madrid, Spain\",\r\n    \"birthdate\": \"1881-10-25\",\r\n    \"image\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/Pablo_picasso_1.jpg/200px-Pablo_picasso_1.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artists",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artists"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new artwork 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"artwork1_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"La Femme qui pleure\",\r\n    \"description\": \"The Weeping Woman, I is an elaboration of one of the central figures in Picasso’s famous mural-size painting Guernica, executed some months earlier.\",\r\n    \"year\": 1838,\r\n    \"type\": \"Painting\",\r\n    \"mainImage\": \"https://resize.marianne.net/r/1540,924/img/var/ceA5RblOiz/asSMcDI0Qj6wQb2OC/asSMcDI0Qj6wQb2OC.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artists/{{artist_id}}/artworks",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artists",
								"{{artist_id}}",
								"artworks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new artwork 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"artwork2_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Child with dove\",\r\n    \"description\": \"It is an oil on canvas painting by the Spanish artist Pablo Picasso, which he created in 1901 at the start of his Blue Period\",\r\n    \"year\": 1903,\r\n    \"type\": \"Painting\",\r\n    \"mainImage\": \"main-image.url\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artists/{{artist_id}}/artworks",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artists",
								"{{artist_id}}",
								"artworks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add artwork to exhibition",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/exhibitions/{{exhibition_id}}/artworks/{{artwork1_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"exhibitions",
								"{{exhibition_id}}",
								"artworks",
								"{{artwork1_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an exhibition's artwork",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/exhibitions/{{exhibition_id}}/artworks/{{artwork1_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"exhibitions",
								"{{exhibition_id}}",
								"artworks",
								"{{artwork1_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Associate artworks to exhibition",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"id\": \"{{artwork1_id}}\",\r\n        \"name\": \"La Femme qui pleure\",\r\n        \"description\": \"The Weeping Woman, I is an elaboration of one of the central figures in Picasso’s famous mural-size painting Guernica, executed some months earlier.\",\r\n        \"year\": 1838,\r\n        \"type\": \"Painting\",\r\n        \"mainImage\": \"https://resize.marianne.net/r/1540,924/img/var/ceA5RblOiz/asSMcDI0Qj6wQb2OC/asSMcDI0Qj6wQb2OC.jpg\"\r\n    },\r\n    {\r\n        \"id\": \"{{artwork2_id}}\",\r\n        \"name\": \"Child with dove\",\r\n        \"description\": \"It is an oil on canvas painting by the Spanish artist Pablo Picasso, which he created in 1901 at the start of his Blue Period\",\r\n        \"year\": 1903,\r\n        \"type\": \"Painting\",\r\n        \"mainImage\": \"main-image.url\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/exhibitions/{{exhibition_id}}/artworks",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"exhibitions",
								"{{exhibition_id}}",
								"artworks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all exhibitions's artworks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/exhibitions/{{exhibition_id}}/artworks",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"exhibitions",
								"{{exhibition_id}}",
								"artworks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an exhibition's artwork",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/exhibitions/{{exhibition_id}}/artworks/{{artwork1_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"exhibitions",
								"{{exhibition_id}}",
								"artworks",
								"{{artwork1_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an artwork 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artworks/{{artwork1_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artworks",
								"{{artwork1_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an artwork 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artworks/{{artwork2_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artworks",
								"{{artwork2_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an artist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artists/{{artist_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artists",
								"{{artist_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an exhibition",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/exhibitions/{{exhibition_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"exhibitions",
								"{{exhibition_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a museum",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/museums/{{museum_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"museums",
								"{{museum_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Movement-Tests",
			"item": [
				{
					"name": "Create a new movement",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"movement_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Impressionism\",\r\n    \"description\": \"Impressionism is an art movement that originated in France in the late 19th century. It is characterized by a focus on capturing the momentary effects of light and color in a scene, often through loose brushwork and a vibrant palette. Rather than detailing subjects with precision, impressionist artists aimed to convey the sensory impression of a scene.\",\r\n    \"countryOfOrigin\": \"France\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/movements",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"movements"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get one movement",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/movements/{{movement_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"movements",
								"{{movement_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a non-existent movement",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The movement with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/movements/00000000-0000-0000-0000-000000000000",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"movements",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all movements",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Number of movements > ' + 0, function () {\r",
									"   var data = pm.response.json()\r",
									"   pm.expect(data.length).to.greaterThan(0)\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/movements",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"movements"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a movement",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"{{movement_id}}\",\r\n    \"name\": \"Impressionism\",\r\n    \"description\": \"New description\",\r\n    \"countryOfOrigin\": \"France\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/movements/{{movement_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"movements",
								"{{movement_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a non-existent movement",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The movement with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"{{movement_id}}\",\r\n    \"name\": \"Impressionism\",\r\n    \"description\": \"New description\",\r\n    \"countryOfOrigin\": \"France\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/movements/00000000-0000-0000-0000-000000000000",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"movements",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a movement",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/movements/{{movement_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"movements",
								"{{movement_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a non-existent movement",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"   pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Get expected error message\", function () {\r",
									"   var data = pm.response.json();\r",
									"   pm.expect(data.message).to.eql(\"The movement with the given id was not found\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/movements/00000000-0000-0000-0000-000000000000",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"movements",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Movement-Artist-Tests",
			"item": [
				{
					"name": "Create a new artist 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"artist1_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Pablo Picasso\",\r\n    \"birthplace\": \"Madrid, Spain\",\r\n    \"birthdate\": \"1881-10-25\",\r\n    \"image\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/Pablo_picasso_1.jpg/200px-Pablo_picasso_1.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artists",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artists"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new artist 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"artist2_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Salvador Dalí\",\r\n    \"birthplace\": \"Figueres, Spain\",\r\n    \"birthdate\": \"1904-05-11\",\r\n    \"image\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/2/27/Salvador_Dali_NYWTS.jpg/330px-Salvador_Dali_NYWTS.jpg\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artists",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artists"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create a new movement",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json()\r",
									"pm.globals.set(\"movement_id\", data.id);\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Impressionism\",\r\n    \"description\": \"Impressionism is an art movement that originated in France in the late 19th century. It is characterized by a focus on capturing the momentary effects of light and color in a scene, often through loose brushwork and a vibrant palette. Rather than detailing subjects with precision, impressionist artists aimed to convey the sensory impression of a scene.\",\r\n    \"countryOfOrigin\": \"France\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/movements",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"movements"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add artist to movement",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"   pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/movements/{{movement_id}}/artists/{{artist1_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"movements",
								"{{movement_id}}",
								"artists",
								"{{artist1_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a movement's artist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/movements/{{movement_id}}/artists/{{artist1_id}}/",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"movements",
								"{{movement_id}}",
								"artists",
								"{{artist1_id}}",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Associate artists to movement",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"id\": \"{{artist1_id}}\",\r\n        \"name\": \"Pablo Picasso\",\r\n        \"birthplace\": \"Madrid, Spain\",\r\n        \"birthdate\": \"1881-10-25\",\r\n        \"image\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/Pablo_picasso_1.jpg/200px-Pablo_picasso_1.jpg\"\r\n    },\r\n    {\r\n        \"id\": \"{{artist2_id}}\",\r\n        \"name\": \"Salvador Dalí\",\r\n        \"birthplace\": \"Figueres, Spain\",\r\n        \"birthdate\": \"1904-05-11\",\r\n        \"image\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/2/27/Salvador_Dali_NYWTS.jpg/330px-Salvador_Dali_NYWTS.jpg\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/movements/{{movement_id}}/artists",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"movements",
								"{{movement_id}}",
								"artists"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all movements's artists",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"   pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/movements/{{movement_id}}/artists",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"movements",
								"{{movement_id}}",
								"artists"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a movement's artist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/movements/{{movement_id}}/artists/{{artist1_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"movements",
								"{{movement_id}}",
								"artists",
								"{{artist1_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an artist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artists/{{artist1_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artists",
								"{{artist1_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete an artist 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/artists/{{artist2_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"artists",
								"{{artist2_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a movement",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"   pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{protocol}}://{{host}}/api/v1/movements/{{movement_id}}",
							"protocol": "{{protocol}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"api",
								"v1",
								"movements",
								"{{movement_id}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "protocol",
			"value": "http"
		},
		{
			"key": "host",
			"value": "localhost:3000"
		}
	]
}